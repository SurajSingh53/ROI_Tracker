import streamlit as st
import pandas as pd
import altair as alt
import seaborn as sns
import matplotlib.pyplot as plt

st.set_page_config(layout="wide", page_title="HealthKart Influencer Dashboard")

# Load data
@st.cache_data
def load_data():
    tracking = pd.read_csv("tracking_data.csv")
    posts = pd.read_csv("posts.csv")
    payouts = pd.read_csv("payouts.csv")
    influencers = pd.read_csv("influencers.csv")
    return tracking, posts, payouts, influencers

tracking, posts, payouts, influencers = load_data()

# Merge data
merged = tracking.merge(influencers, on="influencer_id", how="left")
merged = merged.merge(payouts, on=["influencer_id", "campaign"], how="left")

st.title("📊 HealthKart Influencer Campaign ROI Dashboard")

# Metrics Row
col1, col2, col3, col4 = st.columns(4)
col1.metric("Total Campaigns", tracking["campaign"].nunique())
col2.metric("Total Revenue", f"₹{tracking['revenue'].sum():,.0f}")
col3.metric("Total Orders", int(tracking["orders"].sum()))
col4.metric("Total Clicks", int(tracking["clicks"].sum()))

st.divider()

# Visual 1: Revenue per Campaign
st.subheader("💸 Revenue per Campaign")
campaign_rev = tracking.groupby("campaign")["revenue"].sum().reset_index().sort_values("revenue", ascending=False)
fig1, ax1 = plt.subplots(figsize=(10, 5))
sns.barplot(data=campaign_rev, x="revenue", y="campaign", ax=ax1)
ax1.set_title("Revenue Generated by Each Campaign")
st.pyplot(fig1)

# Visual 2: CTR Trend
st.subheader("📈 Click Through Rate (CTR) Trend")
tracking["date"] = pd.to_datetime(tracking["date"])
tracking["CTR"] = tracking["clicks"] / (tracking["orders"] + 1)
ctr_df = tracking.groupby("date")["CTR"].mean().reset_index()
chart = alt.Chart(ctr_df).mark_line().encode(x="date:T", y="CTR:Q").properties(width=900, height=300)
st.altair_chart(chart, use_container_width=True)

# Visual 3: Influencer Performance
st.subheader("🌟 Top Influencers by Revenue")
influencer_rev = merged.groupby(["name"])["revenue"].sum().reset_index().sort_values("revenue", ascending=False).head(10)
fig2, ax2 = plt.subplots(figsize=(10, 5))
sns.barplot(data=influencer_rev, x="revenue", y="name", palette="magma")
ax2.set_title("Top Influencers by Revenue")
st.pyplot(fig2)

# Visual 4: Platform Reach
st.subheader("📱 Platform Performance by Reach")
reach_df = posts.groupby("platform")["reach"].sum().reset_index().sort_values("reach", ascending=False)
fig3, ax3 = plt.subplots()
sns.barplot(data=reach_df, x="platform", y="reach", ax=ax3, palette="coolwarm")
ax3.set_title("Total Reach per Platform")
st.pyplot(fig3)

# Visual 5: Payout Status
st.subheader("💰 Payout Status Distribution")
fig4, ax4 = plt.subplots()
payouts["status"].value_counts().plot.pie(autopct="%1.0f%%", ax=ax4)
ax4.set_ylabel("")
ax4.set_title("Payout Completion Status")
st.pyplot(fig4)

# Visual 6: Revenue vs Payouts
st.subheader("⚖️ Revenue vs Total Payout per Influencer")
revenue_payout = merged.groupby("name")[["revenue", "total_payout"]].sum().reset_index()
fig5, ax5 = plt.subplots(figsize=(12, 6))
revenue_payout.plot(kind="bar", x="name", ax=ax5)
ax5.set_title("Influencer Revenue vs Payout")
st.pyplot(fig5)

st.markdown("---")
st.markdown("Made with 💚 by Oxolon")
